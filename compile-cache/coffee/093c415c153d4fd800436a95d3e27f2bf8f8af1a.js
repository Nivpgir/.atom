(function() {
  var Command, CommandInfoPane;

  CommandInfoPane = require('../lib/view/command-info-pane');

  Command = require('../lib/provider/command');

  describe('Command Info Pane', function() {
    var command, down, edit, remove, up, view;
    view = null;
    command = null;
    up = null;
    down = null;
    edit = null;
    remove = null;
    beforeEach(function() {
      up = jasmine.createSpy('up');
      down = jasmine.createSpy('down');
      edit = jasmine.createSpy('edit');
      remove = jasmine.createSpy('remove');
      command = {
        project: atom.project.getPaths()[0],
        oldname: 'Test 1',
        name: 'Test 1',
        command: 'echo test',
        wd: '.',
        stdout: {
          highlighting: 'nh'
        },
        stderr: {
          highlighting: 'hc',
          profile: 'python'
        },
        output: {
          console: {
            close_success: true
          }
        }
      };
      command = new Command(command);
      view = new CommandInfoPane(command);
      view.setCallbacks(up, down, edit, remove);
      return jasmine.attachToDOM(view.element);
    });
    it('has a pane', function() {
      return expect(view.element).toBeDefined();
    });
    it('has 4 panes', function() {
      return expect(view.element.children[1].children.length).toBe(4);
    });
    it('has the correct values', function() {
      expect(view.info.find('.module')[0].children[1].children[0].innerText).toBe('echo test');
      expect(view.info.find('.module')[1].children[1].innerText).toBe('Display all output streams');
      expect(view.info.find('.module')[2].children[1].innerText).toBe('Python');
      return expect(view.info.find('.panel-heading')[4].innerText).toBe('Output: Console');
    });
    describe('On up click', function() {
      beforeEach(function() {
        return view.find('.icon-triangle-up').click();
      });
      return it('executes the up callback', function() {
        return expect(up).toHaveBeenCalled();
      });
    });
    describe('On down click', function() {
      beforeEach(function() {
        return view.find('.icon-triangle-down').click();
      });
      return it('executes the down callback', function() {
        return expect(down).toHaveBeenCalled();
      });
    });
    describe('On edit click', function() {
      beforeEach(function() {
        return view.find('.icon-pencil').click();
      });
      return it('executes the edit callback', function() {
        return expect(edit).toHaveBeenCalled();
      });
    });
    return describe('On remove click', function() {
      beforeEach(function() {
        return view.find('.icon-x').click();
      });
      return it('executes the remove callback', function() {
        return expect(remove).toHaveBeenCalled();
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvbml2Ly5hdG9tL3BhY2thZ2VzL2J1aWxkLXRvb2xzL3NwZWMvY29tbWFuZC1pbmZvLXBhbmUtc3BlYy5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEsd0JBQUE7O0FBQUEsRUFBQSxlQUFBLEdBQWtCLE9BQUEsQ0FBUSwrQkFBUixDQUFsQixDQUFBOztBQUFBLEVBQ0EsT0FBQSxHQUFVLE9BQUEsQ0FBUSx5QkFBUixDQURWLENBQUE7O0FBQUEsRUFHQSxRQUFBLENBQVMsbUJBQVQsRUFBOEIsU0FBQSxHQUFBO0FBQzVCLFFBQUEscUNBQUE7QUFBQSxJQUFBLElBQUEsR0FBTyxJQUFQLENBQUE7QUFBQSxJQUNBLE9BQUEsR0FBVSxJQURWLENBQUE7QUFBQSxJQUVBLEVBQUEsR0FBSyxJQUZMLENBQUE7QUFBQSxJQUdBLElBQUEsR0FBTyxJQUhQLENBQUE7QUFBQSxJQUlBLElBQUEsR0FBTyxJQUpQLENBQUE7QUFBQSxJQUtBLE1BQUEsR0FBUyxJQUxULENBQUE7QUFBQSxJQU9BLFVBQUEsQ0FBVyxTQUFBLEdBQUE7QUFDVCxNQUFBLEVBQUEsR0FBSyxPQUFPLENBQUMsU0FBUixDQUFrQixJQUFsQixDQUFMLENBQUE7QUFBQSxNQUNBLElBQUEsR0FBTyxPQUFPLENBQUMsU0FBUixDQUFrQixNQUFsQixDQURQLENBQUE7QUFBQSxNQUVBLElBQUEsR0FBTyxPQUFPLENBQUMsU0FBUixDQUFrQixNQUFsQixDQUZQLENBQUE7QUFBQSxNQUdBLE1BQUEsR0FBUyxPQUFPLENBQUMsU0FBUixDQUFrQixRQUFsQixDQUhULENBQUE7QUFBQSxNQUlBLE9BQUEsR0FDRTtBQUFBLFFBQUEsT0FBQSxFQUFTLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBYixDQUFBLENBQXdCLENBQUEsQ0FBQSxDQUFqQztBQUFBLFFBQ0EsT0FB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

//# sourceURL=/home/niv/.atom/packages/build-tools/spec/command-info-pane-spec.coffee
