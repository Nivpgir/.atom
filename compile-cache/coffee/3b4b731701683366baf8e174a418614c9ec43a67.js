(function() {
  var AnsiParser;

  AnsiParser = require('../lib/output/ansi-parser');

  describe('AnsiParser', function() {
    var elements;
    elements = null;
    beforeEach(function() {
      var element;
      element = document.createElement('div');
      element.innerHTML = '<div></div>';
      return elements = [element];
    });
    describe('On single line with escape code at the beginning and end', function() {
      var ret;
      ret = null;
      beforeEach(function() {
        return ret = AnsiParser.getDelim('\x1b[32mHello \x1b[35;41mbeautiful\x1b[33m world!\x1b[0m', elements, 0);
      });
      it('has one empty style', function() {
        return expect(ret[0]).toEqual([[0, 0, 0], 0, 0]);
      });
      it('has the correct styling for "Hello"', function() {
        return expect(ret[1]).toEqual([[32, 0, 0], 0, 5]);
      });
      it('has the correct styling for "beautiful"', function() {
        return expect(ret[2]).toEqual([[35, 41, 0], 11, 19]);
      });
      it('has the correct styling for "world!"', function() {
        return expect(ret[3]).toEqual([[33, 41, 0], 28, 33]);
      });
      return it('has one empty style at the end', function() {
        return expect(ret[4]).toEqual([[0, 0, 0], 40, 44]);
      });
    });
    describe('On multi line', function() {
      beforeEach(function() {
        return AnsiParser.parseAnsi('\x1b[32mHello\x1b[41m', elements, 0);
      });
      it('has the correct style', function() {
        expect(elements[0].children.length).toBe(2);
        expect(elements[0].children[1].innerText).toBe('Hello');
        return expect(elements[0].children[1].className).toBe('a32 a0 a0');
      });
      it('has the correct attributes', function() {
        return expect(elements[0].children[1].getAttribute('nextStyle')).toBe('a32 a41 a0');
      });
      return describe('On second line', function() {
        beforeEach(function() {
          elements.push(document.createElement('div'));
          return AnsiParser.parseAnsi('World\x1b[', elements, 1);
        });
        it('has the correct style', function() {
          expect(elements[1].children.length).toBe(1);
          expect(elements[1].children[0].innerText).toBe('World');
          return expect(elements[1].children[0].className).toBe('a32 a41 a0');
        });
        it('has the correct attributes', function() {
          return expect(elements[1].children[0].getAttribute('endsWithAnsi')).toBe('\x1b[');
        });
        return describe('On third line', function() {
          beforeEach(function() {
            elements.push(document.createElement('div'));
            return AnsiParser.parseAnsi('01;33m!\x1b[0m', elements, 2);
          });
          it('has the correct style', function() {
            expect(elements[2].children.length).toBe(1);
            expect(elements[2].children[0].innerText).toBe('!');
            return expect(elements[2].children[0].className).toBe('a33 a41 a1');
          });
          return it('has the correct attributes', function() {
            return expect(elements[2].children[0].getAttribute('nextStyle')).toBe('a0 a0 a0');
          });
        });
      });
    });
    return describe('On multi line with unsupported code', function() {
      beforeEach(function() {
        return AnsiParser.parseAnsi('\x1b[32mHello\x1b[24m\x1b[0K', elements, 0);
      });
      it('has the correct style', function() {
        expect(elements[0].children.length).toBe(3);
        expect(elements[0].children[1].innerText).toBe('Hello');
        expect(elements[0].children[2].innerText).toBe('\x1b[0K');
        expect(elements[0].children[1].className).toBe('a32 a0 a0');
        return expect(elements[0].children[2].className).toBe('a32 a0 a24');
      });
      return describe('On second line', function() {
        beforeEach(function() {
          elements.push(document.createElement('div'));
          return AnsiParser.parseAnsi('World\x1b[', elements, 1);
        });
        it('has the correct style', function() {
          expect(elements[1].children.length).toBe(1);
          expect(elements[1].children[0].innerText).toBe('World');
          return expect(elements[1].children[0].className).toBe('a32 a0 a24');
        });
        return it('has the correct attributes', function() {
          return expect(elements[1].children[0].getAttribute('endsWithAnsi')).toBe('\x1b[');
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvbml2Ly5hdG9tL3BhY2thZ2VzL2J1aWxkLXRvb2xzL3NwZWMvYW5zaS1wYXJzZXItc3BlYy5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEsVUFBQTs7QUFBQSxFQUFBLFVBQUEsR0FBYSxPQUFBLENBQVEsMkJBQVIsQ0FBYixDQUFBOztBQUFBLEVBRUEsUUFBQSxDQUFTLFlBQVQsRUFBdUIsU0FBQSxHQUFBO0FBQ3JCLFFBQUEsUUFBQTtBQUFBLElBQUEsUUFBQSxHQUFXLElBQVgsQ0FBQTtBQUFBLElBRUEsVUFBQSxDQUFXLFNBQUEsR0FBQTtBQUNULFVBQUEsT0FBQTtBQUFBLE1BQUEsT0FBQSxHQUFVLFFBQVEsQ0FBQyxhQUFULENBQXVCLEtBQXZCLENBQVYsQ0FBQTtBQUFBLE1BQ0EsT0FBTyxDQUFDLFNBQVIsR0FBb0IsYUFEcEIsQ0FBQTthQUVBLFFBQUEsR0FBVyxDQUFDLE9BQUQsRUFIRjtJQUFBLENBQVgsQ0FGQSxDQUFBO0FBQUEsSUFPQSxRQUFBLENBQVMsMERBQVQsRUFBcUUsU0FBQSxHQUFBO0FBQ25FLFVBQUEsR0FBQTtBQUFBLE1BQUEsR0FBQSxHQUFNLElBQU4sQ0FBQTtBQUFBLE1BRUEsVUFBQSxDQUFXLFNBQUEsR0FBQTtlQUNULEdBQUEsR0FBTSxVQUFVLENBQUMsUUFBWCxDQUFvQiwwREFBcEIsRUFBZ0YsUUFBaEYsRUFBMEYsQ0FBMUYsRUFERztNQUFBLENBQVgsQ0FGQSxDQUFBO0FBQUEsTUFLQSxFQUFBLENBQUcscUJBQUgsRUFBMEIsU0FBQSxHQUFBO2VBQ3hCLE1BQUEsQ0FBTyxHQUFJLENBQUEsQ0FBQSxDQUFYLENBQWMsQ0FBQyxPQUFmLENBQXVCLENBQUMsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsQ0FBRCxFQUFZLENBQVosRUFBZSxDQUFmLENBQXZCLEVB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

//# sourceURL=/home/niv/.atom/packages/build-tools/spec/ansi-parser-spec.coffee
