(function() {
  var Command, CommandEditPane;

  CommandEditPane = require('../lib/view/command-edit-pane');

  Command = require('../lib/provider/command');

  describe('Command Edit Pane', function() {
    var accept, cancel, command, view;
    view = null;
    accept = null;
    cancel = null;
    command = null;
    beforeEach(function() {
      accept = jasmine.createSpy('accept');
      cancel = jasmine.createSpy('cancel');
      command = {
        project: atom.project.getPaths()[0],
        name: 'Test 1',
        command: 'echo test',
        wd: '.',
        modifier: {
          save_all: {}
        },
        stdout: {
          highlighting: 'nh'
        },
        stderr: {
          highlighting: 'hc',
          profile: 'python'
        },
        output: {
          console: {
            close_success: true
          }
        }
      };
      command = new Command(command);
      command.oldname = 'Test 1';
      view = new CommandEditPane(command);
      view.setCallbacks(accept, cancel);
      return jasmine.attachToDOM(view.element);
    });
    it('has a pane', function() {
      return expect(view.element).toBeDefined();
    });
    it('has 12 edit panes', function() {
      return expect(view.find('.inset-panel').length).toBe(12);
    });
    it('has the correct values', function() {
      expect(view.panes[0].view.command_name.getModel().getText()).toBe('Test 1');
      expect(view.panes[1].pane.find('#save_all').prop('checked')).toBe(true);
      expect(view.panes[6].view._stderr.panes[0].view.profile[0].selectedIndex).toBe(3);
      return expect(view.panes[7].view.find('#close_success').prop('checked')).toBe(true);
    });
    describe('On accept', function() {
      beforeEach(function() {
        view.panes[1].pane.find('#save_all').prop('checked', false);
        return view.find('.btn-primary').click();
      });
      it('returns the correct values', function() {
        var oldname, res;
        res = accept.mostRecentCall.args[0];
        oldname = accept.mostRecentCall.args[1];
        expect(accept).toHaveBeenCalled();
        expect(oldname).toBe('Test 1');
        expect(res.project).toBe(atom.project.getPaths()[0]);
        expect(res.command).toBe('echo test');
        expect(res.modifier.save_all).toBeUndefined();
        expect(res.stdout.pipeline).toEqual([]);
        expect(res.stderr.pipeline).toEqual([
          {
            name: 'profile',
            config: {
              profile: 'python'
            }
          }
        ]);
        expect(res.output.console.close_success).toBe(true);
        return expect(res.output.linter).toBeUndefined();
      });
      return it('calls the cancel callback', function() {
        return expect(cancel).toHaveBeenCalled();
      });
    });
    describe('Pane can be created with atom.views.getView', function() {
      var c, execute, p, _ref;
      _ref = [], c = _ref[0], p = _ref[1];
      execute = function(callback) {
        waitsForPromise(function() {
          return atom.packages.activatePackage('build-tools');
        });
        return runs(function() {
          return callback();
        });
      };
      it('On getView with default command', function() {
        return execute(function() {
          c = new Command;
          p = atom.views.getView(c);
          jasmine.attachToDOM(p.element);
          expect(p.panes[0].view.command_name.getModel().getText()).toBe('');
          return expect(p.command.oldname).toBeUndefined();
        });
      });
      return it('on getView with a valid command', function() {
        return execute(function() {
          command.oldname = void 0;
          c = new Command(command);
          p = atom.views.getView(c);
          jasmine.attachToDOM(p.element);
          expect(p.panes[0].view.command_name.getModel().getText()).toBe('Test 1');
          return expect(p.command.oldname).toBe('Test 1');
        });
      });
    });
    return describe('use blacklist to hide modules', function() {
      beforeEach(function() {
        view.remove();
        view = new CommandEditPane(command);
        view.setCallbacks(accept, cancel);
        view.setBlacklist(['general', 'console']);
        return jasmine.attachToDOM(view.element);
      });
      return it('shows all views minus the blacklisted ones', function() {
        expect(view.find('.inset-panel').length).toBe(10);
        return expect(view.panes[0].view.command_name).toBeUndefined();
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvbml2Ly5hdG9tL3BhY2thZ2VzL2J1aWxkLXRvb2xzL3NwZWMvY29tbWFuZC1lZGl0LXBhbmUtc3BlYy5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEsd0JBQUE7O0FBQUEsRUFBQSxlQUFBLEdBQWtCLE9BQUEsQ0FBUSwrQkFBUixDQUFsQixDQUFBOztBQUFBLEVBQ0EsT0FBQSxHQUFVLE9BQUEsQ0FBUSx5QkFBUixDQURWLENBQUE7O0FBQUEsRUFHQSxRQUFBLENBQVMsbUJBQVQsRUFBOEIsU0FBQSxHQUFBO0FBQzVCLFFBQUEsNkJBQUE7QUFBQSxJQUFBLElBQUEsR0FBTyxJQUFQLENBQUE7QUFBQSxJQUNBLE1BQUEsR0FBUyxJQURULENBQUE7QUFBQSxJQUVBLE1BQUEsR0FBUyxJQUZULENBQUE7QUFBQSxJQUdBLE9BQUEsR0FBVSxJQUhWLENBQUE7QUFBQSxJQUtBLFVBQUEsQ0FBVyxTQUFBLEdBQUE7QUFDVCxNQUFBLE1BQUEsR0FBUyxPQUFPLENBQUMsU0FBUixDQUFrQixRQUFsQixDQUFULENBQUE7QUFBQSxNQUNBLE1BQUEsR0FBUyxPQUFPLENBQUMsU0FBUixDQUFrQixRQUFsQixDQURULENBQUE7QUFBQSxNQUVBLE9BQUEsR0FDRTtBQUFBLFFBQUEsT0FBQSxFQUFTLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBYixDQUFBLENBQXdCLENBQUEsQ0FBQSxDQUFqQztBQUFBLFFBQ0EsSUFBQSxFQUFNLFFBRE47QUFBQSxRQUVBLE9BQUEsRUFBUyxXQUZUO0FBQUEsUUFHQSxFQUFBLEVBQUksR0FISjtBQUFBLFFBSUEsUUFBQSxFQUNFO0FBQUEsVUFBQSxRQUFBLEVBQVUsRUFBVjtTQUxGO0FBQUEsUUFNQSxNQUFBLEVBQ0U7QUFBQSxVQUFBLFlBQUEsRUFBYyxJQUFkO1NBUEY7QUFBQSxRQVFBLE1BQUEsRUFDRTtBQUFBLFVBQUEsWUFBQSxFQUFjLElBQWQ7QUFBQSxVQUNBLE9BQUEsRUFBUyxRQURUO1NBVEY7QUFBQSxRQVdBLE1BQUEsRUFDRTtBQUFBLFVBQUEsT0FBQSxFQUNFO0FBQUEsWUFBQSxhQUFBLEVBQWUsSUFBZjtXQURGO1NBWkY7T0FIRixDQUFBO0FBQUEsTUFpQkEsT0FBQSxHQUFjLElBQUEsT0FBQSxDQUFRLE9BQVIsQ0FqQmQsQ0FBQTtBQUFBLE1Ba0JBLE9BQU8sQ0FBQyxPQUFSLEdBQWtCLFFBbEJsQixDQUFBO0FBQUEsTUFtQkEsSUFBQSxHQUFXLElBQUEsZUFBQSxDQUFnQixPQUFoQixDQW5CWCxDQUFBO0FBQUEsTUFvQkEsSUFBSSxDQUFDLFlBQUwsQ0FBa0IsTUFBbEIsRUFBMEIsTUFBMUIsQ0FwQkEsQ0FBQTthQXFCQSxPQUFPLENBQUMsV0FBUixDQUFvQixJQUFJLENBQUMsT0FBekIsRUF0QlM7SUFBQSxDQUFYLENBTEEsQ0FBQTtBQUFBLElBNkJBLEVBQUEsQ0FBRyxZQUFILEVBQWlCLFNBQUEsR0FBQTthQUNmLE1BQUEsQ0FBTyxJQUFJLENBQUMsT0FBWixDQUFvQixDQUFDLFdBQXJCLENBQUEsRUFEZTtJQUFBLENBQWpCLENBN0JBLENBQUE7QUFBQSxJQWdDQSxFQUFBLENBQUcsbUJBQUgsRUFBd0IsU0FBQSxHQUFBO2FBQ3RCLE1BQUEsQ0FBTyxJQUFJLENBQUMsSUFBTCxDQUFVLGNBQVYsQ0FBeUIsQ0FBQyxNQUFqQyxDQUF3QyxDQUFDLElBQXpDLENBQThDLEVBQTlDLEVBRHNCO0lBQUEsQ0FBeEIsQ0FoQ0EsQ0FBQTtBQUFBLElBbUNBLEVBQUEsQ0FBRyx3QkFBSCxFQUE2QixTQUFBLEdBQUE7QUFDM0IsTUFBQSxNQUFBLENBQU8sSUFBSSxDQUFDLEtBQU0sQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQWhDLENBQUEsQ0FBMEMsQ0FBQyxPQUEzQyxDQUFBLENBQVAsQ0FBNEQsQ0FBQyxJQUE3RCxDQUFrRSxRQUFsRSxDQUFBLENBQUE7QUFBQSxNQUNBLE1BQUEsQ0FBTyxJQUFJLENBQUMsS0FBTSxDQUFBLENBQUEsQ0FBRSxDQUFDLElBQUksQ0FBQyxJQUFuQixDQUF3QixXQUF4QixDQUFvQyxDQUFDLElBQXJDLENBQTBDLFNBQTFDLENBQVAsQ0FBNEQsQ0FBQyxJQUE3RCxDQUFrRSxJQUFsRSxDQURBLENBQUE7QUFBQSxNQUVBLE1BQUEsQ0FBTyxJQUFJLENBQUMsS0FBTSxDQUFBLENBQUEsQ0FBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBTSxDQUFBLENBQUEsQ0FBRSxDQUFDLElBQUksQ0FBQyxPQUFRLENBQUEsQ0FBQSxDQUFFLENBQUMsYUFBM0QsQ0FBeUUsQ0FBQyxJQUExRSxDQUErRSxDQUEvRSxDQUZBLENBQUE7YUFHQSxNQUFBLENBQU8sSUFBSSxDQUFDLEtBQU0sQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUFJLENBQUMsSUFBbkIsQ0FBd0IsZ0JBQXhCLENBQXlDLENBQUMsSUFBMUMsQ0FBK0MsU0FBL0MsQ0FBUCxDQUFpRSxDQUFDLElBQWxFLENBQXVFLElBQXZFLEVBSjJCO0lBQUEsQ0FBN0IsQ0FuQ0EsQ0FBQTtBQUFBLElBeUNBLFFBQUEsQ0FBUyxXQUFULEVBQXNCLFNBQUEsR0FBQTtBQUVwQixNQUFBLFVBQUEsQ0FBVyxTQUFBLEdBQUE7QUFDVCxRQUFBLElBQUksQ0FBQyxLQUFNLENBQUEsQ0FBQSxDQUFFLENBQUMsSUFBSSxDQUFDLElBQW5CLENBQXdCLFdBQXhCLENBQW9DLENBQUMsSUFBckMsQ0FBMEMsU0FBMUMsRUFBcUQsS0FBckQsQ0FBQSxDQUFBO2VBQ0EsSUFBSSxDQUFDLElBQUwsQ0FBVSxjQUFWLENBQXlCLENBQUMsS0FBMUIsQ0FBQSxFQUZTO01BQUEsQ0FBWCxDQUFBLENBQUE7QUFBQSxNQUlBLEVBQUEsQ0FBRyw0QkFBSCxFQUFpQyxTQUFBLEdBQUE7QUFDL0IsWUFBQSxZQUFBO0FBQUEsUUFBQSxHQUFBLEdBQU0sTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFLLENBQUEsQ0FBQSxDQUFqQyxDQUFBO0FBQUEsUUFDQSxPQUFBLEdBQVUsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFLLENBQUEsQ0FBQSxDQURyQyxDQUFBO0FBQUEsUUFFQSxNQUFBLENBQU8sTUFBUCxDQUFjLENBQUMsZ0JBQWYsQ0FBQSxDQUZBLENBQUE7QUFBQSxRQUdBLE1BQUEsQ0FBTyxPQUFQLENBQWUsQ0FBQyxJQUFoQixDQUFxQixRQUFyQixDQUhBLENBQUE7QUFBQSxRQUlBLE1BQUEsQ0FBTyxHQUFHLENBQUMsT0FBWCxDQUFtQixDQUFDLElBQXBCLENBQXlCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBYixDQUFBLENBQXdCLENBQUEsQ0FBQSxDQUFqRCxDQUpBLENBQUE7QUFBQSxRQUtBLE1BQUEsQ0FBTyxHQUFHLENBQUMsT0FBWCxDQUFtQixDQUFDLElBQXBCLENBQXlCLFdBQXpCLENBTEEsQ0FBQTtBQUFBLFFBTUEsTUFBQSxDQUFPLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBcEIsQ0FBNkIsQ0FBQyxhQUE5QixDQUFBLENBTkEsQ0FBQTtBQUFBLFFBT0EsTUFBQSxDQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsUUFBbEIsQ0FBMkIsQ0FBQyxPQUE1QixDQUFvQyxFQUFwQyxDQVBBLENBQUE7QUFBQSxRQVFBLE1BQUEsQ0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLFFBQWxCLENBQTJCLENBQUMsT0FBNUIsQ0FBb0M7VUFDbEM7QUFBQSxZQUNFLElBQUEsRUFBTSxTQURSO0FBQUEsWUFFRSxNQUFBLEVBQ0U7QUFBQSxjQUFBLE9BQUEsRUFBUyxRQUFUO2FBSEo7V0FEa0M7U0FBcEMsQ0FSQSxDQUFBO0FBQUEsUUFlQSxNQUFBLENBQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBMUIsQ0FBd0MsQ0FBQyxJQUF6QyxDQUE4QyxJQUE5QyxDQWZBLENBQUE7ZUFnQkEsTUFBQSxDQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBbEIsQ0FBeUIsQ0FBQyxhQUExQixDQUFBLEVBakIrQjtNQUFBLENBQWpDLENBSkEsQ0FBQTthQXVCQSxFQUFBLENBQUcsMkJBQUgsRUFBZ0MsU0FBQSxHQUFBO2VBQzlCLE1BQUEsQ0FBTyxNQUFQLENBQWMsQ0FBQyxnQkFBZixDQUFBLEVBRDhCO01BQUEsQ0FBaEMsRUF6Qm9CO0lBQUEsQ0FBdEIsQ0F6Q0EsQ0FBQTtBQUFBLElBcUVBLFFBQUEsQ0FBUyw2Q0FBVCxFQUF3RCxTQUFBLEdBQUE7QUFDdEQsVUFBQSxtQkFBQTtBQUFBLE1BQUEsT0FBUyxFQUFULEVBQUMsV0FBRCxFQUFJLFdBQUosQ0FBQTtBQUFBLE1BRUEsT0FBQSxHQUFVLFNBQUMsUUFBRCxHQUFBO0FBQ1IsUUFBQSxlQUFBLENBQWdCLFNBQUEsR0FBQTtpQkFBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWQsQ0FBOEIsYUFBOUIsRUFBSDtRQUFBLENBQWhCLENBQUEsQ0FBQTtlQUNBLElBQUEsQ0FBSyxTQUFBLEdBQUE7aUJBQUcsUUFBQSxDQUFBLEVBQUg7UUFBQSxDQUFMLEVBRlE7TUFBQSxDQUZWLENBQUE7QUFBQSxNQU1BLEVBQUEsQ0FBRyxpQ0FBSCxFQUFzQyxTQUFBLEdBQUE7ZUFDcEMsT0FBQSxDQUFRLFNBQUEsR0FBQTtBQUNOLFVBQUEsQ0FBQSxHQUFJLEdBQUEsQ0FBQSxPQUFKLENBQUE7QUFBQSxVQUNBLENBQUEsR0FBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQVgsQ0FBbUIsQ0FBbkIsQ0FESixDQUFBO0FBQUEsVUFFQSxPQUFPLENBQUMsV0FBUixDQUFvQixDQUFDLENBQUMsT0FBdEIsQ0FGQSxDQUFBO0FBQUEsVUFHQSxNQUFBLENBQU8sQ0FBQyxDQUFDLEtBQU0sQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQTdCLENBQUEsQ0FBdUMsQ0FBQyxPQUF4QyxDQUFBLENBQVAsQ0FBeUQsQ0FBQyxJQUExRCxDQUErRCxFQUEvRCxDQUhBLENBQUE7aUJBSUEsTUFBQSxDQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBakIsQ0FBeUIsQ0FBQyxhQUExQixDQUFBLEVBTE07UUFBQSxDQUFSLEVBRG9DO01BQUEsQ0FBdEMsQ0FOQSxDQUFBO2FBY0EsRUFBQSxDQUFHLGlDQUFILEVBQXNDLFNBQUEsR0FBQTtlQUNwQyxPQUFBLENBQVEsU0FBQSxHQUFBO0FBQ04sVUFBQSxPQUFPLENBQUMsT0FBUixHQUFrQixNQUFsQixDQUFBO0FBQUEsVUFDQSxDQUFBLEdBQVEsSUFBQSxPQUFBLENBQVEsT0FBUixDQURSLENBQUE7QUFBQSxVQUVBLENBQUEsR0FBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQVgsQ0FBbUIsQ0FBbkIsQ0FGSixDQUFBO0FBQUEsVUFHQSxPQUFPLENBQUMsV0FBUixDQUFvQixDQUFDLENBQUMsT0FBdEIsQ0FIQSxDQUFBO0FBQUEsVUFJQSxNQUFBLENBQU8sQ0FBQyxDQUFDLEtBQU0sQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQTdCLENBQUEsQ0FBdUMsQ0FBQyxPQUF4QyxDQUFBLENBQVAsQ0FBeUQsQ0FBQyxJQUExRCxDQUErRCxRQUEvRCxDQUpBLENBQUE7aUJBS0EsTUFBQSxDQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBakIsQ0FBeUIsQ0FBQyxJQUExQixDQUErQixRQUEvQixFQU5NO1FBQUEsQ0FBUixFQURvQztNQUFBLENBQXRDLEVBZnNEO0lBQUEsQ0FBeEQsQ0FyRUEsQ0FBQTtXQTZGQSxRQUFBLENBQVMsK0JBQVQsRUFBMEMsU0FBQSxHQUFBO0FBRXhDLE1BQUEsVUFBQSxDQUFXLFNBQUEsR0FBQTtBQUNULFFBQUEsSUFBSSxDQUFDLE1BQUwsQ0FBQSxDQUFBLENBQUE7QUFBQSxRQUNBLElBQUEsR0FBVyxJQUFBLGVBQUEsQ0FBZ0IsT0FBaEIsQ0FEWCxDQUFBO0FBQUEsUUFFQSxJQUFJLENBQUMsWUFBTCxDQUFrQixNQUFsQixFQUEwQixNQUExQixDQUZBLENBQUE7QUFBQSxRQUdBLElBQUksQ0FBQyxZQUFMLENBQWtCLENBQUMsU0FBRCxFQUFZLFNBQVosQ0FBbEIsQ0FIQSxDQUFBO2VBSUEsT0FBTyxDQUFDLFdBQVIsQ0FBb0IsSUFBSSxDQUFDLE9BQXpCLEVBTFM7TUFBQSxDQUFYLENBQUEsQ0FBQTthQU9BLEVBQUEsQ0FBRyw0Q0FBSCxFQUFpRCxTQUFBLEdBQUE7QUFDL0MsUUFBQSxNQUFBLENBQU8sSUFBSSxDQUFDLElBQUwsQ0FBVSxjQUFWLENBQXlCLENBQUMsTUFBakMsQ0FBd0MsQ0FBQyxJQUF6QyxDQUE4QyxFQUE5QyxDQUFBLENBQUE7ZUFDQSxNQUFBLENBQU8sSUFBSSxDQUFDLEtBQU0sQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUFJLENBQUMsWUFBMUIsQ0FBdUMsQ0FBQyxhQUF4QyxDQUFBLEVBRitDO01BQUEsQ0FBakQsRUFUd0M7SUFBQSxDQUExQyxFQTlGNEI7RUFBQSxDQUE5QixDQUhBLENBQUE7QUFBQSIKfQ==

//# sourceURL=/home/niv/.atom/packages/build-tools/spec/command-edit-pane-spec.coffee
