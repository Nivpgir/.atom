(function() {
  var random;

  random = require("lodash.random");

  module.exports = {
    init: function() {
      this.resetParticles();
      return this.animationFrame = requestAnimationFrame(this.drawParticles.bind(this));
    },
    resetCanvas: function() {
      this.editor = null;
      this.editorElement = null;
      return cancelAnimationFrame(this.animationFrame);
    },
    resetParticles: function() {
      this.particlePointer = 0;
      return this.particles = [];
    },
    destroy: function() {
      var _ref;
      this.resetCanvas();
      this.resetParticles();
      if ((_ref = this.canvas) != null) {
        _ref.parentNode.removeChild(this.canvas);
      }
      return this.canvas = null;
    },
    setupCanvas: function(editor, editorElement) {
      var _ref;
      if (!this.canvas) {
        this.canvas = document.createElement("canvas");
        this.context = this.canvas.getContext("2d");
        this.canvas.classList.add("power-mode-canvas");
      }
      ((_ref = editorElement.shadowRoot) != null ? _ref : editorElement).appendChild(this.canvas);
      this.canvas.style.display = "block";
      this.editorElement = editorElement;
      this.editor = editor;
      return this.init();
    },
    hsvToRgb: function(h, s, v) {
      var c, h2, h3, m, x;
      c = v * s;
      h2 = (360.0 * h) / 60.0;
      h3 = Math.abs((h2 % 2) - 1.0);
      x = c * (1.0 - h3);
      m = v - c;
      if ((0 <= h2 && h2 < 1)) {
        return [c + m, x + m, m];
      }
      if ((1 <= h2 && h2 < 2)) {
        return [x + m, c + m, m];
      }
      if ((2 <= h2 && h2 < 3)) {
        return [m, c + m, x + m];
      }
      if ((3 <= h2 && h2 < 4)) {
        return [m, x + m, c + m];
      }
      if ((4 <= h2 && h2 < 5)) {
        return [x + m, m, c + m];
      }
      if ((5 <= h2 && h2 < 6)) {
        return [c + m, m, x + m];
      }
    },
    spawnParticles: function(screenPosition) {
      var b, c, color, colorType, cursorOffset, g, golden_ratio_conjugate, left, numParticles, r, rgb, seed, top, _ref, _results, _results1;
      cursorOffset = this.calculateCursorOffset();
      _ref = this.editorElement.pixelPositionForScreenPosition(screenPosition), left = _ref.left, top = _ref.top;
      left += cursorOffset.left - this.editorElement.getScrollLeft();
      top += cursorOffset.top - this.editorElement.getScrollTop();
      numParticles = random(this.getConfig("spawnCount.min"), this.getConfig("spawnCount.max"));
      colorType = this.getConfig("colours.type");
      if (colorType === "random") {
        seed = Math.random();
        golden_ratio_conjugate = 0.618033988749895;
        _results = [];
        while (numParticles--) {
          seed += golden_ratio_conjugate;
          seed = seed - (Math.floor(seed / 1));
          rgb = this.hsvToRgb(seed, 1, 1);
          r = Math.floor((rgb[0] * 255) / 1);
          g = Math.floor((rgb[1] * 255) / 1);
          b = Math.floor((rgb[2] * 255) / 1);
          color = "rgb(" + r + "," + g + "," + b + ")";
          this.particles[this.particlePointer] = this.createParticle(left, top, color);
          _results.push(this.particlePointer = (this.particlePointer + 1) % this.getConfig("totalCount.max"));
        }
        return _results;
      } else {
        if (colorType === "fixed") {
          c = this.getConfig("colours.fixed");
          color = "rgb(" + c.red + "," + c.green + "," + c.blue + ")";
        } else {
          color = this.getColorAtPosition([screenPosition.row, screenPosition.column - 1]);
        }
        _results1 = [];
        while (numParticles--) {
          this.particles[this.particlePointer] = this.createParticle(left, top, color);
          _results1.push(this.particlePointer = (this.particlePointer + 1) % this.getConfig("totalCount.max"));
        }
        return _results1;
      }
    },
    getColorAtPosition: function(screenPosition) {
      var bufferPosition, el, error, scope, _ref;
      bufferPosition = this.editor.bufferPositionForScreenPosition(screenPosition);
      scope = this.editor.scopeDescriptorForBufferPosition(bufferPosition);
      try {
        el = ((_ref = this.editorElement.shadowRoot) != null ? _ref : this.editorElement).querySelector(scope.toString());
      } catch (_error) {
        error = _error;
        "rgb(255, 255, 255)";
      }
      if (el) {
        return getComputedStyle(el).color;
      } else {
        return "rgb(255, 255, 255)";
      }
    },
    calculateCursorOffset: function() {
      var editorRect, scrollViewRect, _ref;
      editorRect = this.editorElement.getBoundingClientRect();
      scrollViewRect = ((_ref = this.editorElement.shadowRoot) != null ? _ref : this.editorElement).querySelector(".scroll-view").getBoundingClientRect();
      return {
        top: scrollViewRect.top - editorRect.top + this.editor.getLineHeightInPixels() / 2,
        left: scrollViewRect.left - editorRect.left
      };
    },
    createParticle: function(x, y, color) {
      return {
        x: x,
        y: y,
        alpha: 1,
        color: color,
        velocity: {
          x: -1 + Math.random() * 2,
          y: -3.5 + Math.random() * 2
        }
      };
    },
    drawParticles: function() {
      var gco, particle, size, _i, _len, _ref;
      if (this.editor) {
        this.animationFrame = requestAnimationFrame(this.drawParticles.bind(this));
      }
      if (!(this.canvas && this.editorElement)) {
        return;
      }
      this.canvas.width = this.editorElement.offsetWidth;
      this.canvas.height = this.editorElement.offsetHeight;
      gco = this.context.globalCompositeOperation;
      this.context.globalCompositeOperation = "lighter";
      _ref = this.particles;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        particle = _ref[_i];
        if (particle.alpha <= 0.1) {
          continue;
        }
        particle.velocity.y += 0.075;
        particle.x += particle.velocity.x;
        particle.y += particle.velocity.y;
        particle.alpha *= 0.96;
        this.context.fillStyle = "rgba(" + particle.color.slice(4, -1) + ", " + particle.alpha + ")";
        size = random(this.getConfig("size.min"), this.getConfig("size.max"), true);
        this.context.fillRect(Math.round(particle.x - size / 2), Math.round(particle.y - size / 2), size, size);
      }
      return this.context.globalCompositeOperation = gco;
    },
    getConfig: function(config) {
      return atom.config.get("activate-power-mode.particles." + config);
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,

//# sourceURL=/C:/Users/MNP/.atom/packages/activate-power-mode/lib/power-canvas.coffee
