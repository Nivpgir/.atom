(function() {
  var Main;

  Main = require('../lib/main');

  describe('Console Service', function() {
    var create, focus, model, remove, _ref;
    model = null;
    _ref = [], focus = _ref[0], create = _ref[1], remove = _ref[2];
    beforeEach(function() {
      Main.provideInput().OutputModules.reset();
      jasmine.attachToDOM(atom.views.getView(atom.workspace));
      spyOn(Main.provideInput().OutputModules.modules.console, 'activate').andCallThrough();
      model = Main.provideConsole();
      focus = jasmine.createSpy('focus');
      create = jasmine.createSpy('create');
      remove = jasmine.createSpy('remove');
      model.onFocusTab(focus);
      model.onCreateTab(create);
      return model.onRemoveTab(remove);
    });
    afterEach(function() {
      return Main.provideInput().OutputModules.deactivate('console');
    });
    it('initializes the console', function() {
      expect(Main.provideInput().OutputModules.modules.console.activate).toHaveBeenCalled();
      return expect(model).toBeDefined();
    });
    return describe('when creating a new tab', function() {
      var close, tab;
      tab = null;
      close = null;
      beforeEach(function() {
        tab = model.createCustomTab('Test Tab');
        close = jasmine.createSpy('close');
        return tab.onClose(close);
      });
      it('emits a create event', function() {
        return expect(create).toHaveBeenCalledWith(tab);
      });
      describe('on clear', function() {
        return it('clears the view', function() {
          tab.view.text('Hello');
          expect(tab.view.text()).toBe('Hello');
          tab.clear();
          return expect(tab.view.text()).toBe('');
        });
      });
      describe('on setIcon', function() {
        return it('sets the icon', function() {
          tab.setIcon('x');
          return expect(tab.header.icon.hasClass('icon-x')).toBe(true);
        });
      });
      describe('on setHeader', function() {
        return it('sets the header', function() {
          tab.setHeader('Hello');
          expect(tab.header.name.text()).toBe('Hello');
          return expect(tab.title.innerText).toBe('Hello');
        });
      });
      describe('on printLine', function() {
        return it('prints a line', function() {
          tab.printLine('<div>Hello World!</div>');
          return expect(tab.view.text()).toBe('Hello World!');
        });
      });
      describe('on focus', function() {
        beforeEach(function() {
          return tab.focus();
        });
        return it('calls the focus event', function() {
          expect(focus).toHaveBeenCalledWith(tab);
          return expect(model.activeTab).toBe(tab);
        });
      });
      return describe('on close', function() {
        beforeEach(function() {
          return tab.close();
        });
        it('calls the close event', function() {
          return expect(close).toHaveBeenCalled();
        });
        return it('calls the remove event', function() {
          return expect(remove).toHaveBeenCalledWith(tab);
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvbml2Ly5hdG9tL3BhY2thZ2VzL2J1aWxkLXRvb2xzL3NwZWMvY29uc29sZS1zZXJ2aWNlLXNwZWMuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLElBQUE7O0FBQUEsRUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLGFBQVIsQ0FBUCxDQUFBOztBQUFBLEVBRUEsUUFBQSxDQUFTLGlCQUFULEVBQTRCLFNBQUEsR0FBQTtBQUMxQixRQUFBLGtDQUFBO0FBQUEsSUFBQSxLQUFBLEdBQVEsSUFBUixDQUFBO0FBQUEsSUFDQSxPQUEwQixFQUExQixFQUFDLGVBQUQsRUFBUSxnQkFBUixFQUFnQixnQkFEaEIsQ0FBQTtBQUFBLElBR0EsVUFBQSxDQUFXLFNBQUEsR0FBQTtBQUNULE1BQUEsSUFBSSxDQUFDLFlBQUwsQ0FBQSxDQUFtQixDQUFDLGFBQWEsQ0FBQyxLQUFsQyxDQUFBLENBQUEsQ0FBQTtBQUFBLE1BQ0EsT0FBTyxDQUFDLFdBQVIsQ0FBb0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFYLENBQW1CLElBQUksQ0FBQyxTQUF4QixDQUFwQixDQURBLENBQUE7QUFBQSxNQUVBLEtBQUEsQ0FBTSxJQUFJLENBQUMsWUFBTCxDQUFBLENBQW1CLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxPQUFoRCxFQUF5RCxVQUF6RCxDQUFvRSxDQUFDLGNBQXJFLENBQUEsQ0FGQSxDQUFBO0FBQUEsTUFHQSxLQUFBLEdBQVEsSUFBSSxDQUFDLGNBQUwsQ0FBQSxDQUhSLENBQUE7QUFBQSxNQUlBLEtBQUEsR0FBUSxPQUFPLENBQUMsU0FBUixDQUFrQixPQUFsQixDQUpSLENBQUE7QUFBQSxNQUtBLE1BQUEsR0FBUyxPQUFPLENBQUMsU0FBUixDQUFrQixRQUFsQixDQUxULENBQUE7QUFBQSxNQU1BLE1BQUEsR0FBUyxPQUFP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

//# sourceURL=/home/niv/.atom/packages/build-tools/spec/console-service-spec.coffee
