(function() {
  var Emitter, Tab, TabItem, TabView;

  TabView = require('./tab-view');

  TabItem = require('./tab-item');

  Emitter = require('atom').Emitter;

  module.exports = Tab = (function() {
    function Tab(command) {
      this.command = command;
      this.emitter = new Emitter;
      this.destroyed = false;
      this.header = new TabItem(this.command.project, this.command.name, (function(_this) {
        return function() {
          return _this.close();
        };
      })(this));
      this.view = new TabView;
      this.header.setHeader("" + this.command.name + " of " + this.command.project);
      this.focus = null;
      this.console = null;
      this.input = null;
    }

    Tab.prototype.destroy = function() {
      this.destroyed = true;
      this.emitter.dispose();
      this.input = null;
      this.focus = null;
      this.console = null;
      this.header = null;
      this.view = null;
      this.title = null;
      return this.command = null;
    };

    Tab.prototype.clear = function() {
      if (this.destroyed) {
        return;
      }
      this.view.clear();
      this.error = null;
      this.code = null;
      return this.signal = null;
    };

    Tab.prototype.setInput = function(input) {
      this.input = input;
    };

    Tab.prototype.setRunning = function() {
      if (this.destroyed) {
        return;
      }
      return this.header.setIcon('sync');
    };

    Tab.prototype.setError = function(error) {
      this.error = error;
      if (this.destroyed) {
        return;
      }
      this.header.setIcon('x');
      this.code = -1;
      return this.getHeader();
    };

    Tab.prototype.setFinished = function(status) {
      if (this.destroyed) {
        return;
      }
      this.code = status.exitcode;
      this.signal = status.signal;
      if (this.code === 0) {
        return this.header.setIcon('check');
      } else {
        this.header.setIcon('x');
        return this.getHeader();
      }
    };

    Tab.prototype.setCancelled = function() {
      if (this.destroyed) {
        return;
      }
      this.header.setIcon('x');
      if (this.code == null) {
        this.code = -2;
      }
      return this.getHeader();
    };

    Tab.prototype.newLine = function() {
      if (this.destroyed) {
        return;
      }
      return this.view.printLine('<div></div>');
    };

    Tab.prototype.scroll = function() {
      if (this.destroyed) {
        return;
      }
      return this.view.scroll();
    };

    Tab.prototype.finishConsole = function() {
      if (this.destroyed) {
        return;
      }
      return this.view.finishConsole();
    };

    Tab.prototype.hasFocus = function() {
      if (this.console == null) {
        return true;
      }
      return this === this.console.activeTab;
    };

    Tab.prototype.getHeader = function() {
      var s;
      if (this.destroyed) {
        return;
      }
      if (this.title == null) {
        this.title = document.createElement('span');
      }
      this.title.innerText = "" + this.command.name + " of " + this.command.project;
      if (this.code == null) {
        return this.title;
      }
      if (this.code !== 0) {
        s = document.createElement('span');
        this.title.innerText += ': ';
        s.className = 'error';
        if (this.signal !== null) {
          s.innerText = 'received ' + this.signal;
        } else if (this.code > 0) {
          s.innerText = 'finished with exit code ' + this.code;
        } else if (this.code === -1) {
          s.innerText = 'received ' + this.error;
        } else {
          s.innerText = 'aborted by user or package';
        }
        this.title.appendChild(s);
      }
      return this.title;
    };

    Tab.prototype.close = function() {
      return this.emitter.emit('close');
    };

    Tab.prototype.onClose = function(callback) {
      return this.emitter.on('close', callback);
    };

    return Tab;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvbml2Ly5hdG9tL3BhY2thZ2VzL2J1aWxkLXRvb2xzL2xpYi9jb25zb2xlL3RhYi5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEsOEJBQUE7O0FBQUEsRUFBQSxPQUFBLEdBQVUsT0FBQSxDQUFRLFlBQVIsQ0FBVixDQUFBOztBQUFBLEVBQ0EsT0FBQSxHQUFVLE9BQUEsQ0FBUSxZQUFSLENBRFYsQ0FBQTs7QUFBQSxFQUdDLFVBQVcsT0FBQSxDQUFRLE1BQVIsRUFBWCxPQUhELENBQUE7O0FBQUEsRUFLQSxNQUFNLENBQUMsT0FBUCxHQUNRO0FBQ1MsSUFBQSxhQUFFLE9BQUYsR0FBQTtBQUNYLE1BRFksSUFBQyxDQUFBLFVBQUEsT0FDYixDQUFBO0FBQUEsTUFBQSxJQUFDLENBQUEsT0FBRCxHQUFXLEdBQUEsQ0FBQSxPQUFYLENBQUE7QUFBQSxNQUNBLElBQUMsQ0FBQSxTQUFELEdBQWEsS0FEYixDQUFBO0FBQUEsTUFFQSxJQUFDLENBQUEsTUFBRCxHQUFjLElBQUEsT0FBQSxDQUFRLElBQUMsQ0FBQSxPQUFPLENBQUMsT0FBakIsRUFBMEIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxJQUFuQyxFQUF5QyxDQUFBLFNBQUEsS0FBQSxHQUFBO2VBQUEsU0FBQSxHQUFBO2lCQUFHLEtBQUMsQ0FBQSxLQUFELENBQUEsRUFBSDtRQUFBLEVBQUE7TUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQXpDLENBRmQsQ0FBQTtBQUFBLE1BR0EsSUFBQyxDQUFBLElBQUQsR0FBUSxHQUFBLENBQUEsT0FIUixDQUFBO0FBQUEsTUFJQSxJQUFDLENBQUEsTUFBTSxDQUFDLFNBQVIsQ0FBa0IsRUFBQSxHQUFHLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBWixHQUFpQixNQUFqQixHQUF1QixJQUFDLENBQUEsT0FBTyxDQUFDLE9B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

//# sourceURL=/home/niv/.atom/packages/build-tools/lib/console/tab.coffee
