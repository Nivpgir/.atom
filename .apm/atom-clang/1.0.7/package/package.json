{"name":"atom-clang","description":"C/C++ Code Completion and Linting via LibClang for Atom Editor","keywords":["c","c++","clang","completion","libclang","linter"],"author":{"name":"Joe Roback"},"version":"1.0.7","main":"index","repository":{"type":"git","url":"git+https://github.com/joeroback/atom-clang.git"},"license":"MIT","engines":{"atom":">=1.9.0 <2.0.0"},"dependencies":{"atom-package-deps":"^4.3.1","bindings":"^1.2.1","nan":"^2.4.0"},"devDependencies":{},"providedServices":{"autocomplete.provider":{"versions":{"2.0.0":"provide"}},"linter":{"versions":{"1.0.0":"provideLinter"}}},"package-deps":["linter"],"os":["!win32"],"scripts":{"install":"node-gyp rebuild"},"gypfile":true,"readme":"# atom-clang\n\n[LibClang](http://clang.llvm.org/docs/Tooling.html) based code completion and linter for [Atom Editor](http://atom.io)\n\n![](https://cloud.githubusercontent.com/assets/156174/17979392/8c78bf54-6ab7-11e6-97bf-f7de4eedc56b.gif)\n\n## Features\n\n* Semantic code completion using [autocomplete-plus](https://atom.io/packages/autocomplete-plus)\n* Diagnostics using [linter](https://atom.io/packages/linter)\n* Native C++ v8 Node module using [LibClang](http://clang.llvm.org/docs/Tooling.html), no 3rd party dependencies.\n  * Fast low-latency completions\n  * Easy to setup with your project, no external configuration needed\n* Per project configuration supported with [Project Manager](https://atom.io/packages/project-manager)\n\n## Requirements\n\nSince this is a package uses C++, it will require the package to be compiled. This is automatically done for you by Atom, but it does have some requirements.\n\n* C++11 compiler, either GCC or Clang\n* LibClang 3.8 or greater\n\nLibClang is detected via `llvm-config` command. It needs to build and link against the LibClang headers and library. It attempts to find the newest version of `llvm-config` it can on your system. Currently, I do not know of way at package install time through Atom to let the user specify which one to use. See [llvm-config.sh](https://github.com/joeroback/atom-clang/blob/master/llvm-config.sh).\n\nCurrently, this only works on Linux and Mac. I do not have a Windows computer. I would welcome any patches / pull requests to add Windows support.\n\n### Installing\n\nThis package should be installed through the Atom package manager. Search for package named [atom-clang](https://atom.io/packages/atom-clang). For the bleeding edge, you can clone this repository and link it into Atom with `apm` if desired.\n\n### Global Configuration\n\nThis package can work out-of-the-box, but usually requires some minor configuration. This is because parsing with LibClang, literally runs `clang` over your source files and usually needs the `CFLAGS` or `CXXFLAGS` one would use to compile.\n\nYou can set global `CFLAGS` and `CXXFLAGS`. This will work for any random projects without any major flags.\n\n### Per Project Configuration\n\nPer project configuration with Atom is an ongoing open feature request. Thankfully, [Project Manager](https://atom.io/packages/project-manager) gives us at least 99% of what we want. It does require you to manually edit the project settings file.\n\n## Keymaps\n\n<kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>r</kbd> Reparse Current Editor\n<kbd>shift</kbd>+<kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>r</kbd> Reparse All Editors\n\n## Issues\n\nPlease report all issues in the [issue tracker](https://github.com/joeroback/atom-clang/issues).\n\nThe more information you can include, the better. CFlags/CXXFlags especially.\nHaving a reproducible test case would also greatly increase the debug time, though I realize that is not always possible.\n\n## Roadmap\n\nI would love the roadmap to be largely driven by users, but her is a list I came up to get started.\n\n#### Short Term\n\n- [ ] Add support for compile_commands.json\n- [ ] Add support for precompiled headers\n\n#### Long Term\n\n- [ ] Replace [linter](https://atom.io/packages/linter) (I find the interface unsuited for C++ linting, and to be frank, very buggy)\n  - [ ] Add support for FixIt\n- [ ] Add support for <kbd>ctrl</kbd>-click code navigation\n\n## License\n\nMIT License\n\nCopyright (c) 2016, Joe Roback &lt;<joe.roback@gmail.com>&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/joeroback/atom-clang/issues"},"homepage":"https://github.com/joeroback/atom-clang#readme","_id":"atom-clang@1.0.7","_shasum":"c1fb7fb2f08e6a37028a58842f174946fef84dcf","_resolved":"file:../d-116731-24755-12g7n4l.uxpfxq1tt9/package.tgz","_from":"../d-116731-24755-12g7n4l.uxpfxq1tt9/package.tgz"}